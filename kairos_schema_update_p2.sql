-- Project Kairos: Schema Update for Phase 2
-- Filename: kairos_schema_update_p2.sql

-- Add the new Architect agent to the swarm.
INSERT INTO Agents (name, capabilities)
VALUES ('Architect-01', '{"planning", "task-decomposition"}')
ON CONFLICT (name) DO NOTHING; -- Prevents errors if you run the script multiple times

-- Create the table to hold the tasks generated by the Architect.
CREATE TABLE IF NOT EXISTS Tasks (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    venture_id UUID NOT NULL REFERENCES Ventures(id),
    created_by_agent_id UUID NOT NULL REFERENCES Agents(id),
    parent_task_id UUID REFERENCES Tasks(id), -- For hierarchical tasks in the future
    description TEXT NOT NULL,
    status VARCHAR(50) NOT NULL DEFAULT 'PENDING', -- e.g., PENDING, IN_PROGRESS, COMPLETED
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Add a column to Ventures to track if a plan has been generated.
-- This prevents the Architect from re-planning an existing venture.
ALTER TABLE Ventures ADD COLUMN IF NOT EXISTS plan_generated_at TIMESTAMP WITH TIME ZONE;

-- Add an index for faster lookups of tasks by venture.
CREATE INDEX IF NOT EXISTS idx_tasks_venture_id ON Tasks(venture_id);

-- Add an index for task status.
CREATE INDEX IF NOT EXISTS idx_tasks_status ON Tasks(status);

COMMENT ON COLUMN Ventures.plan_generated_at IS 'Timestamp of when the Architect agent successfully generated the initial task plan.';
COMMENT ON TABLE Tasks IS 'Stores actionable tasks decomposed from a Venture''s objective by the Architect agent.';
-- Project Kairos: Schema Update for Milestone 2.2
-- Filename: kairos_schema_update_p2_2.sql

-- Add the new Engineer agent to the swarm.
INSERT INTO Agents (name, capabilities)
VALUES ('Engineer-01', '{"task-execution", "simulated-work"}')
ON CONFLICT (name) DO NOTHING;

-- Add columns to the Tasks table to track execution status.
ALTER TABLE Tasks ADD COLUMN IF NOT EXISTS assigned_to_agent_id UUID REFERENCES Agents(id);
ALTER TABLE Tasks ADD COLUMN IF NOT EXISTS started_at TIMESTAMP WITH TIME ZONE;
ALTER TABLE Tasks ADD COLUMN IF NOT EXISTS completed_at TIMESTAMP WITH TIME ZONE;

COMMENT ON COLUMN Tasks.assigned_to_agent_id IS 'The ID of the agent that has claimed and is executing this task.';
COMMENT ON COLUMN Tasks.started_at IS 'Timestamp of when an agent started working on this task.';
COMMENT ON COLUMN Tasks.completed_at IS 'Timestamp of when an agent completed this task.';
